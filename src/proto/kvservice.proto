syntax = "proto3";
package RHINO;

service KVService {
  //Plain GET/PUT request
  rpc RawGet(RawGetRequest) returns (RawGetResponse) {}
  rpc RawPut(RawPutRequest) returns (RawPutResponse) {}
  
  //Transactional Requests
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc Put(PutRequest) returns (PutResponse) {}
  rpc PreWrite(PreWriteRequest) returns (PreWriteResponse) {}
  rpc CheckTxnStatus(CheckTxnStatusRequest) returns (CheckTxnStatusResponse) {}
  rpc Commit(CommitRequest) returns (CommitResponse) {}
};

//Plain GET request.
message RawGetRequest {
    int64 qid = 1;
    repeated string key = 2;
};

//Plain PUT request.
message RawPutRequest {
    int64 qid = 1;
    repeated string key = 2;
    repeated string value = 3;
};

//Plain GET response.
message RawGetResponse {
    int32 status = 1;
    repeated string value = 2;
};

//Plain GET response.
message GetResponse {
    int32 status = 1;
    repeated string value = 2;
};

//Plain PUT response.
message RawPutResponse {
    int32 status = 1; 
}

//Plain PUT response.
message PutResponse {
    int32 status = 1; 
}

//Txn GET request
message GetRequest {
    string key = 1;
    uint64 version = 2;
}

message PutRequest {
    string key = 1;
    string value = 2;
}

message PreWriteRequest {
    repeated PutRequest putRequests = 1;
    uint64 start_version = 2;
}

message PreWriteResponse {
    int32 status = 1;
}

message CheckTxnStatusRequest {
    uint64 lock_ts = 1;
    uint64 current_ts = 2;
}

message CheckTxnStatusResponse {
    uint64 lock_ttl = 1;
    uint64 commit_version = 2;

}

message CommitRequest {
    uint64 start_version = 1;
    repeated string keys = 2;
    uint64 commit_version = 3;
}

message CommitResponse {
    int32 status = 1;
}